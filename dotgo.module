<?php
/**
 * @file
 * Code for the DOTGO module.
 */

include_once 'includes/dotgo.util.inc';
include_once 'includes/dotgo.menu.inc';
include_once 'includes/dotgo.filter.inc';

/**
 * Implements hook_permission().
 */
function dotgo_permission() {
  return array(
    'administer dotgo' => array(
      'title' => t('Administer DOTGO'),
      'description' => t('Configure settings for DOTGO'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function dotgo_theme(){
  $theme = array(
    'node__dotgo' => array(
      'render element' => 'content',
      'base hook' => 'node',
      'template' => 'node--dotgo',
      'path' => drupal_get_path('module', 'dotgo') . '/theme',
    ),
    'dotgo_default' => array(
      'template' => 'theme/dotgo-default',
    ),
    'dotgo_menu' => array(
      'template' => 'theme/dotgo-menu',
    ),
  );
  return $theme;
}

/**
 * Implementation of hook_dotgo_menu
 *
 * @see includes/dotgo.menu.inc
 */
function dotgo_dotgo_menu() {
  $dg = _dotgo_designator();
  $items = array();

  $items['front'] = array(
    'title' => t('Home'),
    'query' => $dg,
    'menu_name' => 'main',
    'weight' => 0,
  );

  return $items;
}

/**
 * Implements hook_entity_info_alter().
 */
function dotgo_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['dotgo'] = array(
    'label' => t('DOTGO'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_preprocess_node().
 */
function dotgo_preprocess_node(&$vars) {
  if($vars['view_mode'] == 'dotgo') {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['view_mode'];
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__' . $vars['view_mode'];
  }
}

